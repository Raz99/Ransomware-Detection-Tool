"""
Ransomware Detection Tool - Resource Efficiency Analysis
=========================================================

1. Memory Usage (Space Complexity):
-----------------------------------
-  O(1) for real-time event monitoring (via Watchdog/inotify): no buffer retention.
-  O(n) for storing:
    - SHA-256 hashes per file
    - MIME types
    - Partial file content (~few KB for fuzzy comparison)
    - Windowed entropy values using SortedDict (one per 1KB block)
-  Efficient: metadata + partial statistics only; no full file storage.

2. Runtime Efficiency (Time Complexity):
----------------------------------------
-  O(1) per event for filesystem change detection (Watchdog).
-  O(log(n)) for change analysis, where n is file size:
    - Only small prefix of file (~4KB) is scanned
    - Windowed entropy is precomputed (SortedDict), updated incrementally
    - ASCII ratio and fuzzy similarity run on small window only
    - MIME detection limited to 1KB
-  Fast detection with logarithmic access to suspicious segments.

3. I/O Complexity (Disk Access):
-------------------------------
-  Minimal I/O via real-time file event hooks (no polling).
-  Partial file read (~4KB) for changed files only.
-  Total disk access scales with *event frequency*, not folder size.

4. Architecture:
----------------
- Phase 1: Real-time file monitoring (creation/modification/deletion)
- Phase 2: Lightweight content inspection via:
    - MIME type analysis
    - ASCII ratio
    - Average + windowed entropy
    - Fuzzy hash similarity
    - Encoding pattern detection
- Honeypot files act as high-confidence traps.

Summary:
--------
-  Designed for low-overhead, efficient ransomware detection
-  Memory: O(n)
- Ô∏è Runtime: O(log(n)) per modified file
-  I/O: event-triggered, minimal (~4KB per change)
"""